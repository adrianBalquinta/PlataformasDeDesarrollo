
@page "/tareas/editar/{id:int}"
@using BlazorApp1.Data
@inject TareaService service
@inject NavigationManager navigation

<EditForm Model="@Modelo" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group row">
        <label for="lastName" class="col-sm-2 col-form-label">
            Titulo
        </label>
        <div class="col-sm-10">
            <InputText @bind-Value="Modelo.Titulo" />
        </div>
    </div>

 
    <div class="form-group row">
        <label for="lastName" class="col-sm-2 col-form-label">
            Vencimiento
        </label>
        <InputDate @bind-Value="Vencimiento" />
    </div>
    <div class="form-group row">
        <InputSelect @bind-Value="ResponsableId">
            <option value="0">Elija un rol</option>
            @foreach (var item in recursos)
            {
                <option value="@item.Id">@item.Usuario</option>
            }
        </InputSelect>
    </div>
    <button type="submit">Guardar</button>
</EditForm>

@code {

    [Parameter]
    public int Id { get; set; }

    public string Titulo { get; set; }

    public DateTime Vencimiento { get; set; }

    public int Estimacion { get; set; }

    public string ResponsableId { get; set; }

    public bool Estado { get; set; }

    public Tarea Modelo { get; set; } = new Tarea();

    private List<Recurso> recursos;


    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            Modelo = await service.Get(Id);
            ResponsableId = Modelo.ResponsableId.ToString();

        }
        else
        {
            Modelo = new Tarea();
        }
        recursos = await service.GetRecursos();
    }


    private async void Guardar()
    {
        Modelo.ResponsableId = int.Parse(ResponsableId);
        await service.Save(Modelo);
        navigation.NavigateTo("tareas/listado");
    }

}
